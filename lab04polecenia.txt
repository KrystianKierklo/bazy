LAB 04
zad.1
b) 
ALTER TABLE walizka DROP FOREIGN KEY walizka_ibfk1;
ALTER TABLE przetowry DROP FOREIGN KEY przetwory_ibfk_2;
ALTER TABLE przetowry DROP FOREIGN KEY przetwory_ibfk_1;
ALTER TABLE postac MODIFY id_postaci INT;
ALTER TABLE postac DROP PRIMARY KEY;

zad.2 
a)
ALTER TABLE postac ADD pesel VARCHAR(11) NOT NULL;
UPDATE postac SET pesel='78945612345'+id_postaci;
ALTER TABLE postac ADD PRIMARY KEY(pesel);

b)
ALTER TABLE postac MODIFY rodzaj enum('wiking','ptak','kobieta','syrena');

c)
INSERT INTO postac VALUES(9,'Gertruda','syrena','2000-10-10','20','NULL','45612378945');

zad.3
a)
SELECT nazwa FROM postac WHERE nazwa LIKE '%a%';
UPDATE postac SET statek="oseberg" WHERE nazwa LIKE '%a%';
b)
ALTER TABLE statek MODIFY max_ladownosc FLOAT;
UPDATE statek SET max_ladownosc=max_ladownosc*0.7;
c)
ALTER TABLE postac ADD CHECK (wiek<1001);
zad.4
a)
ALTER TABLE postac MODIFY rodzaj enum('wiking','ptak','kobieta','syrena','waz');
INSERT INTO postac VALUES(15,'loko','waz','2005-10-10','default','12345678911',NULL);
b)
CREATE TABLE marynarz SELECT * FROM postac;
DELETE FROM marynarz WHERE nazwa='loko';

zad.5
a)UPDATE postac SET statek=NULL;
b) DELETE FROM postac WHERE nazwa='alvi';
c) DELETE FROM statek;
d) ALTER TABLE student DROP FOREIGN KEY postac_ibfk_1
   DROP TABLE statek;
e)CREATE TABLE zwierz (id_zwierza INT PRIMARY KEY AUTO_INCREMENT, nazwa VARCHAR(50), wiek INT);
f)INSERT INTO zwierz SELECT id_postaci,nazwa,wiek FROM postac;


LAB05

zad.1
a)
CREATE TABLE kreatura SELECT * FROM wikinkowie.kreatura;
CREATE TABLE zasob SELECT * FROM wikingowie.zasob;
CREATE TABLE ekwipunek SELECT * FROM wikingowie.ekwipunek;
b) SELECT * FROM zasob;
c) SELECT rodzaj='jedzenie' FROM zasob;
d) SELECT idZasobu, ilosc from ekwipunek WHERE idKreatury IN(1,3,5);

zad.2
a)SELECT * FROM kreatura WHERE rodzaj!='wiedzma' and udzwig>=50;
b)SELECT * FROM zasob WHERE waga BETWEEN 2 AND 5;
c)SELECT * FROM kreatura WHERE nazwa LIKE '%or%' AND udzwig BETWEEN 30 AND 70;

zad.3
a)select * from zasob where month(dataPozyskania) IN (7,8)
b)SELECT * FROM zasob WHERE rodzaj != '' ORDER BY waga ASC;
c)SELECT * FROM kreatura ORDER BY dataUr ASC limit 5;

zad.4 
a)SELECT DISTINCT rodzaj FROM zasob;
b)SELECT CONCAT (nazwa," - ",rodzaj) FROM kreatura WHERE rodzaj LIKE 'wi%';
c)SELECT nazwa, ilosc*waga AS waga_calkowita FROM zasob WHERE year(dataPozyskania) BETWEEN 2000 and 2007;
zad.5
a)SELECT nazwa, waga*0.7 AS waga_wlasciwa, waga*0.3 AS waga_odpadkow FROM zasob
b)SELECT nazwa FROM zasob WHERE rodzaj IS NULL;
c)SELECT DISTINCT rodzaj, nazwa FROM zasob WHERE nazwa LIKE 'Ba%' OR nazwa LIKE  '%os' ORDER BY rodzaj ASC;

LAB06

zad.1
a)SELECT avg(waga) FROM kreatura WHERE rodzaj='wiking';
b)SELECT rodzaj,COUNT(nazwa) FROM kreatura GROUP BY rodzaj;
  SELECT rodzaj, AVG(waga) as 'sredniaWaga', COUNT(nazwa) AS 'liczbaKreatur' FROM kreatura GROUP BY rodzaj;
c)SELECT rodzaj,round(AVG(year(current_timestamp)-year(dataUr))) AS 'sredni wiek' FROM kreatura GROUP BY rodzaj ;
zad.2
a)SELECT rodzaj, SUM(waga*ilosc) FROM zasob GROUP BY rodzaj;
b)SELECT nazwa, AVG(waga) FROM zasob GROUP BY nazwa HAVING AVG(waga)>10 AND SUM(ilosc)>=4;
c)SELECT rodzaj, COUNT(DISTINCT(nazwa)) FROM zasob GROUP BY rodzaj;
zad.3
a)SELECT k.nazwa, e.idZasobu, e.ilosc FROM kreatura k, ekwipunek e WHERE k.idKreatury=e.idKreatury;
b)SELECT k.nazwa, z.nazwa, e.ilosc from kreatura as k, zasob as z, ekwipunek as e where k.idKreatury=e.idKreatury and z.idZasobu=e.idZasobu;
c) SELECT * FROM kreatura k LEFT JOIN ekwipunek e ON k.idKreatury=e.idKreatury;SELECT * FROM kreatura k LEFT JOIN ekwipunek e ON k.idKreatury=e.idKreatury WHERE e.idKreatury IS NULL;
zad.4
a)SELECT k.nazwa,z.nazwa FROM kreatura k, ekwipunek e, zasob z where k.idKreatury=e.idKreatury and e.idZasobu=z.idZasobu and year(dataUr) between 1670 and 1680;
b)SELECT k.nazwa FROM kreatura AS k, ekwipunek AS e, zasob AS z WHERE k.idKreatury=e.idKreatury AND e.idZasobu=z.idZasobu AND z.rodzaj='jedzenie' ORDER BY k.dataUr DESC LIMIT 5;
c)SELECT concat(k1.nazwa,' - ',k2.nazwa) from kreatura k1, kreatura k2 where k1.idKreatury=k2.idKreatury+5;
zad.5
a)select k.rodzaj, avg(e.ilosc*z.waga) as srednia from kreatura as k inner join ekwipunek as e inner join zasob as z on k.idKreatury=e.idKreatury
and e.idZasobu=z.idZasobu where k.rodzaj NOT IN('malpa', 'waz') group by k.rodzaj having sum(e.ilosc)<30;
b)select a.nazwa, a.rodzaj, a.dataUr from kreatura a, (SELECT min(dataUr) min, max(dataUr) max
from kreatura group by rodzaj) b WHERE b.min = a.dataUr OR b.max=a.dataUr;

LAB 07

zad.1
a)DELETE FROM kreatura;
INSERT INTO kreatura SELECT * FROM wikingowie.kreatura;
CREATE TABLE uczestnicy SELECT * FROM wikingowie.uczestnicy;
CREATE TABLE etapy_wyprawy SELECT * FROM wikingowie.etapy_wyprawy;
CREATE TABLE sektor SELECT * FROM wikingowie.sektor;
CREATE TABLE wyprawa SELECT * FROM wikingowie.wyprawa;

b)SELECT k.nazwa FROM kreatura AS k LEFT JOIN uczestnicy AS u ON k.idKreatury=u.id_uczestnika WHERE k.idKreatury IS NULL OR u.id_uczestnika IS NULL;
c)SELECT w.nazwa, SUM(e.ilosc) FROM kreatura AS k, wyprawa AS w, uczestnicy AS u, ekwipunek AS e WHERE k.idKreatury=e.idKreatury AND k.idKreatury=u.id_uczestnika AND u.id_wyprawy=w.id_wyprawy GROUP BY w.nazwa;


zad.2 
a)SELECT w.nazwa,COUNT(u.id_uczestnika), GROUP_CONCAT(k.nazwa SEPARATOR ' ') FROM wyprawa AS w, uczestnicy AS u, kreatura AS k WHERE w.id_wyprawy=u.id_wyprawy AND u.id_uczestnika=k.idKreatury GROUP BY w.nazwa;
b)

zad.3
a)SELECT id_sektora,COUNT(idEtapu) AS odwiedzony FROM sektor s LEFT JOIN etapy_wyprawy e ON e.sektor=s.id_sektora GROUP BY id_sektora ;
b)SELECT nazwa ,IF(COUNT(id_uczestnika)>0,"bral udzial w wyprawie","nie bral udzialu w wyprawie") FROM kreatura LEFT JOIN uczestnicy ON idKreatury=id_uczestnika GROUP BY nazwa ;

zad.4
a)SELECT w.nazwa,SUM(length(et.dziennik)) FROM wyprawa w INNER JOIN etapy_wyprawy et ON w.id_wyprawy=et.idEtapu GROUP BY w.nazwa HAVING SUM(length(et.dziennik)) <400;
b)
